#include<iostream>
#include<math.h>
#include<GL/glut.h>
Using namespace std;
Int xc = 320, yc = 300;
Void plot_point(int x, int y)
{
glBegin(GL_POINTS);
glVertex2i(xc+x, yc+y);
glVertex2i(xc+x, yc-y);
glVertex2i(xc+y, yc+x);
glVertex2i(xc+y, yc-x);
glVertex2i(xc-x, yc-y);
glVertex2i(xc-y, yc-x);
glVertex2i(xc-x, yc+y);
glVertex2i(xc-y, yc+x);
glEnd();
}
Void bresenham_circle(int r)
{
Int x=0,y=r;
Float d=3-2*r;
Plot_point(x,y);
Int k;
While(x < y)
{
X = x + 1;
If(d < 0) d=d+4*x+6;
Else
{
Y = y – 1;
D=d+4*(x-y)+10;
}
Plot_point(x,y);
}
glFlush();
}
Void display()
 {
Int radius1=120;
glClear(GL_COLOR_BUFFER_BIT);
bresenham_circle(radius1);
 }
Void Init()
 {
glClearColor(1.0,1.0,1.0,0);
glColor3f(0.0,0.0,0.0);
gluOrtho2D(0 , 640 , 0 , 480);
 }
Int main(int argc, char **argv)
{
glutInit(&argc,argv);
glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
glutInitWindowPosition(0,0);
glutInitWindowSize(640,480);
glutCreateWindow(“bresenham_circle”);
Init();
glutDisplayFunc(display);
glutMainLoop();
}

//g++ points.cpp -lGL -lGLU -lg
//./a.out
